<!--
Author: Doug Ayers
Website: https://douglascayers.com
GitHub: https://github.com/douglascayers/sfdx-lightning-api
License: BSD 3-Clause License
 -->
<apex:page>

    <apex:includeScript value="{!$Resource.postmate_1_4_4}"/>
    <apex:includeScript value="{!$Resource.jsforce_1_9_1}"/>

    <script>

        var conn = new jsforce.Connection({ accessToken: '{!$API.Session_Id}', version: '43.0' });

        var _restRequest;

        // Expose your model to the Parent. Property values may be functions, promises, or regular values
        const handshake = new Postmate.Model({

            restRequest : function( request ) {
                _restRequest = request;
            },

            restResponse : function() {
                return new Promise( function( resolve, reject ) {
                    conn.request( _restRequest ).then( function( response ) {
                        resolve({
                            success: true,
                            data: response
                        });
                    }).catch( function( err ) {
                        // Have to resolve because if reject
                        // then whole post message operation fails,
                        // so wrapping our response with our own
                        // success flag to denote if any errors.
                        resolve({
                            success: false,
                            data: err.message // postMessage cannot deserialize the Error object, so pick off the message
                        });
                    });
                });
            }

        });

        // When parent <-> child handshake is complete, events may be emitted to the parent
        handshake.then( function( parent ) {

        });

    </script>

</apex:page>
